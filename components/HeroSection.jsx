import { useNavigation } from '@react-navigation/native';
import { useEffect, useRef, useState } from 'react';
import {
  Animated,
  Dimensions,
  ImageBackground,
  Linking,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
} from 'react-native';
import homebg from '../assets/images/homebg.jpg';
import colors from '../constant/colors';

const { height, width } = Dimensions.get('window');

const MARQUEE_PHRASES = [
  `рд╢реНрд░реА рдХреГрд╖реНрдг рдЬрдиреНрдо рднреВрдорд┐ рдореБрдХреНрддрд┐ рджрд▓ "рдЕрд╣рд┐рдВрд╕рд╛ рдкрд░рдореЛ рдзрд░реНрдо, рдзрд░реНрдо рд╣рд┐рдВрд╕рд╛ рддрдереИрд╡ рдЪрдГ"`,
  `рд╢реНрд░реА рдХреГрд╖реНрдг рдЬрдиреНрдо рднреВрдорд┐ рдореБрдХреНрддрд┐ рджрд▓ рдХрд╛ рд╕рдВрдХрд▓реНрдк: рдЧреМ рд╣рддреНрдпрд╛ рдкрд░ рдкреВрд░реНрдг рдкреНрд░рддрд┐рдмрдВрдз рдХрд░рд╛рдирд╛ред`,
  `рд╢реНрд░реА рдХреГрд╖рдг рдЬрдиреНрдорднреВрдорд┐ рддрдерд╛ рд╢реНрд░реА рдХрд╛рд╢реА рд╡рд┐рд╢реНрд╡рдирд╛рде рд╕рд╣рд┐рдд рд╕рднреА рд╕рдирд╛рддрди рдХреЗ рдордВрджрд┐рд░реЛрдВ рд╡ рдкреНрд░рддреАрдХ рдЪрд┐рдиреНрд╣реЛрдВ рдХреЛ рдореБрдХреНрдд рдХрд░рд╛рдирд╛ред`,
  `рд╕рднреА рдордВрджрд┐рд░реЛрдВ рдХреЛ рд╕рд░рдХрд╛рд░реА рдирд┐рдпрдВрддреНрд░рдг рд╕реЗ рдореБрдХреНрдд рдХрд░рд╛рдХрд░ рд╡реИрджрд┐рдХ рдмреЛрд░реНрдб рдХрд╛ рдЧрдарди рдХрд░рд╡рд╛рдирд╛ред`,
  `рднрд╛рд░рдд рдХреЛ рд╣рд┐рдВрджреВ рд░рд╛рд╖реНрдЯреНрд░ рдШреЛрд╖рд┐рдд рдХрд░рд╛рдирд╛ рддрдерд╛ рд╣рд┐рдВрджреВ рд░рд╛рд╖реНрдЯреНрд░ рдХрд╛ рдирдпрд╛ рд╕рдВрд╡рд┐рдзрд╛рди рдмрдирд╡рд╛рдирд╛ред`,
  `рдЧреНрд░рд╛рдо рд╕реНрддрд░ рдкрд░ рдкреБрдЬрд╛рд░реА рдирд┐рдпреБрдХреНрдд рдХрд░рдирд╛, рдордВрджрд┐рд░реЛрдВ рдХрд╛ рдЬреАрд░реНрдгреЛрджреНрдзрд╛рд░ рдХрд░рдирд╛ рдФрд░ рдЬрд╣рд╛рдВ рдордВрджрд┐рд░ рдирд╣реАрдВ рд╣реИрдВ рд╡рд╣рд╛рдВ рдирдП рдордВрджрд┐рд░реЛрдВ рдХрд╛ рдирд┐рд░реНрдорд╛рдг рдХрд░рдирд╛ред`,
];

const HeroSection = () => {
  const navigation = useNavigation();
  const [phraseIndex, setPhraseIndex] = useState(0);
  const fadeAnim = useRef(new Animated.Value(0)).current;

  useEffect(() => {
    fadeInOutAnimation();
  }, [phraseIndex]);

  const fadeInOutAnimation = () => {
    Animated.sequence([
      Animated.timing(fadeAnim, {
        toValue: 1,
        duration: 1200,
        useNativeDriver: true,
      }),
      Animated.delay(3000),
      Animated.timing(fadeAnim, {
        toValue: 0,
        duration: 1200,
        useNativeDriver: true,
      }),
    ]).start(() => {
      setPhraseIndex((prev) => (prev + 1) % MARQUEE_PHRASES.length);
    });
  };

  const handleDonatePress = () => {
    navigation.navigate('donate');
  };

  const handleJoinPress = () => {
    Linking.openURL('https://skjbmd.org');
  };

  const handleMemberPress = () => {
    navigation.navigate('member');
  };

  const handleChatPress = () => {
    navigation.navigate('chat');
  };

  return (
    <ImageBackground source={homebg} style={styles.background} resizeMode="cover">
      <View style={styles.overlay}>
        <Text style={styles.title}>
          рд╢реНрд░реА рдХреГрд╖реНрдг рдЬрдиреНрдо рднреВрдорд┐ рдореБрдХреНрддрд┐ рджрд▓{"\n"} рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ!
        </Text>

        <Text style={styles.subtitle}>
          рд╕рдирд╛рддрди рдХреЗ рд▓рд┐рдП рд╕рдВрдХрд▓реНрдкрд┐рдд рд▓реЛрдЧреЛрдВ рдХреЗ рд╕рд╛рде рдЬреБрдбрд╝реЗрдВред
        </Text>

        <TouchableOpacity style={styles.linkButton} onPress={handleJoinPress}>
          <Text style={styles.linkText}>ЁЯСЙ рдЬреБрдбрд╝рдиреЗ рдХреЗ рд▓рд┐рдП skjbmd.org рдкрд░ рдЬрд╛рдПрдВ</Text>
        </TouchableOpacity>

        <Text style={styles.subtitle}>
          рд╕рдирд╛рддрди рдХреЗ рдЙрддреНрдерд╛рди рдореЗрдВ рдФрд░ рджреЗрд╡рд╕реНрдерд▓реЛрдВ рдХреЛ рдкреБрдирдГ рдЖрдХреНрд░рд╛рдВрддрд╛рдУ рд╕реЗ рдореБрдХреНрдд рдХрд░рд╛ рд╕реНрдерд╛рдкрд┐рдд рдХрд░рд╛рдиреЗ рддрдерд╛ рд╕рдирд╛рддрди рдХреЗ рдореВрд▓ рдЧреБрд░реБрдХреБрд▓ рдХреА рд╕реНрдерд╛рдкрдирд╛ рд╣реЗрддреБ рдЖрдк рд╕рднреА рд╕реЗ рд╕рд╣рдпреЛрдЧ рдХреА рдЕрдкреЗрдХреНрд╖рд╛ рдЗрд╕ рдЧрд╛рд░рдиреНрдЯреА рдХреЗ рд╕рд╛рде рдХрд┐ рдЖрдк рдХрд╛ рдХрд┐рдпрд╛ рд╣реБрд╡рд╛ рджрд╛рди рд╕рдирд╛рддрди рдХреЗ рдЙрддреНрдерд╛рди рдореЗрдВ рдЕрд╣рдо рд╣реЛрдЧрд╛ред{'\n\n'}
          рдЬрдп рд╢реНрд░реА рдХреГрд╖реНрдг тЬж рд╣рд░ рд╣рд░ рдорд╣рд╛рджреЗрд╡
        </Text>

        <View style={styles.buttonContainer}>
          <TouchableOpacity style={styles.primaryButton} onPress={handleDonatePress}>
            <Text style={styles.buttonText}>ЁЯзз рджрд╛рди рдХрд░реЗрдВ</Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.secondaryButton} onPress={handleMemberPress}>
            <Text style={styles.buttonText}>ЁЯУЬ рд╕рджрд╕реНрдп рд╕реВрдЪреА</Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.secondaryButton} onPress={handleChatPress}>
            <Text style={styles.buttonText}>ЁЯТм рдЪреИрдЯ рдХрд░реЗрдВ</Text>
          </TouchableOpacity>
        </View>
      </View>

      <View style={styles.marqueeContainer}>
        <Animated.Text style={[styles.marqueeText, { opacity: fadeAnim }]}>
          {MARQUEE_PHRASES[phraseIndex]}
        </Animated.Text>
      </View>
    </ImageBackground>
  );
};

const styles = StyleSheet.create({
  background: {
    width,
    height,
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  overlay: {
    backgroundColor: 'rgba(0, 0, 0, 0.55)',
    width: '100%',
    padding: 25,
    borderBottomLeftRadius: 80,
    borderBottomRightRadius: 80,
    alignItems: 'center',
  },
  title: {
    fontSize: 28,
    color: colors.cardBackground,
    fontWeight: 'bold',
    textAlign: 'center',
    marginBottom: 10,
  },
  subtitle: {
    fontSize: 18,
    color: colors.cardBackground,
    textAlign: 'center',
    lineHeight: 26,
    maxWidth: 720,
    marginTop: 8,
  },
  linkButton: {
    marginVertical: 12,
    paddingVertical: 8,
    paddingHorizontal: 20,
    borderRadius: 20,
    backgroundColor: '#FFD70033',
  },
  linkText: {
    color: '#FFD700',
    fontSize: 16,
    textAlign: 'center',
    fontWeight: '600',
  },
  buttonContainer: {
    marginTop: 25,
    width: '100%',
    alignItems: 'center',
  },
  primaryButton: {
    backgroundColor: colors.button,
    paddingVertical: 12,
    paddingHorizontal: 35,
    borderRadius: 30,
    marginBottom: 12,
  },
  secondaryButton: {
    backgroundColor: '#ffffff22',
    paddingVertical: 10,
    paddingHorizontal: 30,
    borderRadius: 30,
    borderWidth: 1,
    borderColor: '#fff',
    marginTop: 8,
  },
  buttonText: {
    color: colors.cardBackground,
    fontSize: 18,
    fontWeight: 'bold',
    textAlign: 'center',
  },
  marqueeContainer: {
    width: '100%',
    height: 40,
    backgroundColor: '#ffd700',
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 10,
  },
  marqueeText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#b22222',
    textAlign: 'center',
  },
});

export default HeroSection;
